name: Continuous Persistent VPS

on:
  schedule:
    - cron: '40 */6 * * *'   # рд╣рд░ 6 рдШрдВрдЯреЗ рдкрд░, рдорд┐рдирдЯ 40 рдкрд░ (closest to 5h40m)
  workflow_dispatch:

jobs:
  vps-session:
    runs-on: ubuntu-latest
    timeout-minutes: 350

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set hostname to dilshant
        run: sudo hostnamectl set-hostname dilshant

      - name: Download VPS backup (if any)
        uses: actions/download-artifact@v4
        with:
          name: vps-backup
          path: ./backup
        continue-on-error: true

      - name: Install prerequisites
        run: |
          sudo apt update
          sudo apt install -y tmate curl unzip sudo net-tools neofetch

      - name: Install Tailscale official script
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Restore backup files
        run: |
          if [ -f ./backup/backup.zip ]; then
            unzip -o ./backup/backup.zip -d /
          else
            echo "No backup found, starting fresh"
          fi

      - name: Restore Tailscale state
        run: |
          if [ -f /opt/vps-backup/data/tailscaled.state ]; then
            sudo mkdir -p /var/lib/tailscale
            sudo cp /opt/vps-backup/data/tailscaled.state /var/lib/tailscale/tailscaled.state
            sudo chmod 600 /var/lib/tailscale/tailscaled.state
          fi

      - name: Start Tailscale
        run: |
          sudo tailscaled &
          sleep 8
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname=dilshant || echo "Tailscale already up"

      - name: Create user dilshant with sudo
        run: |
          if ! id -u dilshant >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash dilshant
            echo "dilshant:dilshant" | sudo chpasswd
            sudo usermod -aG sudo dilshant
            echo "dilshant ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/dilshant
          fi

      - name: Start tmate session for SSH access
        uses: mxschmitt/action-tmate@v3

      - name: Show Tailscale IP and tmate info
        run: |
          echo "ЁЯУб Tailscale IP:"
          tailscale ip -4 || echo "Tailscale IP not found"
          echo ""
          echo "ЁЯФЧ tmate SSH session:"
          cat $HOME/.tmate.sock/ssh || true

      # ---- Backup ZIP рдмрдирд╛рдирд╛ (рдЬреИрд╕рд╛ рдкрд╣рд▓реЗ рдерд╛) ----
      - name: Backup VPS data and tailscale state
        run: |
          set -e
          sudo mkdir -p /opt/vps-backup/data
          if [ -f /var/lib/tailscale/tailscaled.state ]; then
            sudo cp /var/lib/tailscale/tailscaled.state /opt/vps-backup/data/ || true
          fi
          sudo chown -R $USER:$USER /opt/vps-backup
          zip -r backup.zip /opt/vps-backup

      - name: Upload VPS backup artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: vps-backup
          path: backup.zip

      # ---- Google Drive Upload via rclone ----
      - name: Install rclone
        run: |
          curl -fsSL https://rclone.org/install.sh | sudo bash

      - name: Configure rclone from secret
        # тЪая╕П рддреБрдордХреЛ RCLONE_CONF_B64 рдирд╛рдо рдХрд╛ secret рдмрдирд╛рдирд╛ рд╣реЛрдЧрд╛ (base64 of rclone.conf)
        run: |
          mkdir -p ~/.config/rclone
          echo "${{ secrets.RCLONE_CONF_B64 }}" | base64 -d > ~/.config/rclone/rclone.conf
          chmod 600 ~/.config/rclone/rclone.conf

      - name: Upload backup.zip to Google Drive
        env:
          DRIVE_REMOTE: gdrive                # rclone remote name (rclone.conf рдореЗрдВ рдпрд╣реА рд╣реЛрдирд╛ рдЪрд╛рд╣рд┐рдП)
          DRIVE_FOLDER: VPS-Backups/dilshant  # Drive рдкрд░ рдлрд╝реЛрд▓реНрдбрд░ path
        run: |
          set -e
          TS=$(date -u +'%Y-%m-%d_%H-%M-%S-UTC')
          DEST="$DRIVE_REMOTE:$DRIVE_FOLDER/$TS"
          echo "Uploading to $DEST"
          rclone mkdir "$DEST"
          rclone copy --ignore-existing backup.zip "$DEST/"
          echo "тЬЕ Uploaded to Google Drive: $DEST/backup.zip"
